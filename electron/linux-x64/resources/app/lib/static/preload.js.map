{"version":3,"sources":["preload.js"],"names":["INJECT_JS_PATH","join","__dirname","log","require","setNotificationCallback","callback","OldNotify","window","Notification","newNotify","title","opt","requestPermission","bind","Object","defineProperty","get","permission","clickSelector","element","mouseEvent","MouseEvent","dispatchEvent","injectScripts","needToInject","existsSync","send","document","addEventListener","event","preventDefault","targetElement","srcElement","href","parentElement","targetHref","once","target","on","message","appArgs","JSON","parse","info","setZoomFactor"],"mappings":";;AAGA;;AACA;;;;AACA;;;;;;AAEA,IAAMA,iBAAiB,eAAKC,IAAL,CAAUC,SAAV,EAAqB,QAArB,EAA+B,kBAA/B,CAAvB,C,CAPA;;;;AAQA,IAAMC,MAAMC,QAAQ,UAAR,CAAZ;AACA;;;;AAIA,SAASC,uBAAT,CAAiCC,QAAjC,EAA2C;AACzC,MAAMC,YAAYC,OAAOC,YAAzB;AACA,MAAMC,YAAY,SAAZA,SAAY,CAACC,KAAD,EAAQC,GAAR,EAAgB;AAChCN,aAASK,KAAT,EAAgBC,GAAhB;AACA,WAAO,IAAIL,SAAJ,CAAcI,KAAd,EAAqBC,GAArB,CAAP;AACD,GAHD;AAIAF,YAAUG,iBAAV,GAA8BN,UAAUM,iBAAV,CAA4BC,IAA5B,CAAiCP,SAAjC,CAA9B;AACAQ,SAAOC,cAAP,CAAsBN,SAAtB,EAAiC,YAAjC,EAA+C;AAC7CO,SAAK;AAAA,aAAMV,UAAUW,UAAhB;AAAA;AADwC,GAA/C;;AAIAV,SAAOC,YAAP,GAAsBC,SAAtB;AACD;;AAED,SAASS,aAAT,CAAuBC,OAAvB,EAAgC;AAC9B,MAAMC,aAAa,IAAIC,UAAJ,CAAe,OAAf,CAAnB;AACAF,UAAQG,aAAR,CAAsBF,UAAtB;AACD;;AAED,SAASG,aAAT,GAAyB;AACvB,MAAMC,eAAe,aAAGC,UAAH,CAAc1B,cAAd,CAArB;AACA,MAAI,CAACyB,YAAL,EAAmB;AACjB;AACD;AACD;AACA;AACArB,UAAQJ,cAAR;AACD;;AAEDK,wBAAwB,UAACM,KAAD,EAAQC,GAAR,EAAgB;AACtC,wBAAYe,IAAZ,CAAiB,cAAjB,EAAiChB,KAAjC,EAAwCC,GAAxC;AACD,CAFD;;AAIAgB,SAASC,gBAAT,CAA0B,kBAA1B,EAA8C,YAAM;AAClDrB,SAAOqB,gBAAP,CAAwB,aAAxB,EAAuC,UAACC,KAAD,EAAW;AAChDA,UAAMC,cAAN;AACA,QAAIC,gBAAgBF,MAAMG,UAA1B;;AAEA;AACA;AACA,WAAO,CAACD,cAAcE,IAAf,IAAuBF,cAAcG,aAA5C,EAA2D;AACzDH,sBAAgBA,cAAcG,aAA9B;AACD;AACD,QAAMC,aAAaJ,cAAcE,IAAjC;;AAEA,QAAI,CAACE,UAAL,EAAiB;AACf,4BAAYC,IAAZ,CAAiB,mBAAjB,EAAsC,YAAM;AAC1ClB,sBAAcW,MAAMQ,MAApB;AACA,8BAAYX,IAAZ,CAAiB,yBAAjB;AACD,OAHD;AAID;;AAED,0BAAYA,IAAZ,CAAiB,mBAAjB,EAAsCS,UAAtC;AACD,GAnBD,EAmBG,KAnBH;;AAqBAZ;AACD,CAvBD;;AAyBA,sBAAYe,EAAZ,CAAe,QAAf,EAAyB,UAACT,KAAD,EAAQU,OAAR,EAAoB;AAC3C,MAAMC,UAAUC,KAAKC,KAAL,CAAWH,OAAX,CAAhB;AACArC,MAAIyC,IAAJ,CAAS,iBAAT,EAA4BH,OAA5B;AACD,CAHD;;AAKA,sBAAYF,EAAZ,CAAe,OAAf,EAAwB,UAACT,KAAD,EAAQU,OAAR,EAAoB;AAC1C;AACArC,MAAIyC,IAAJ,CAAS,QAAT,EAAmBJ,OAAnB;AACD,CAHD;;AAKA,sBAAYD,EAAZ,CAAe,aAAf,EAA8B,UAACT,KAAD,EAAQU,OAAR,EAAoB;AAChD,qBAASK,aAAT,CAAuBL,OAAvB;AACD,CAFD","file":"preload.js","sourcesContent":["/**\n Preload file that will be executed in the renderer process\n */\nimport { ipcRenderer, webFrame } from 'electron';\nimport path from 'path';\nimport fs from 'fs';\n\nconst INJECT_JS_PATH = path.join(__dirname, '../../', 'inject/inject.js');\nconst log = require('loglevel');\n/**\n * Patches window.Notification to set a callback on a new Notification\n * @param callback\n */\nfunction setNotificationCallback(callback) {\n  const OldNotify = window.Notification;\n  const newNotify = (title, opt) => {\n    callback(title, opt);\n    return new OldNotify(title, opt);\n  };\n  newNotify.requestPermission = OldNotify.requestPermission.bind(OldNotify);\n  Object.defineProperty(newNotify, 'permission', {\n    get: () => OldNotify.permission,\n  });\n\n  window.Notification = newNotify;\n}\n\nfunction clickSelector(element) {\n  const mouseEvent = new MouseEvent('click');\n  element.dispatchEvent(mouseEvent);\n}\n\nfunction injectScripts() {\n  const needToInject = fs.existsSync(INJECT_JS_PATH);\n  if (!needToInject) {\n    return;\n  }\n  // Dynamically require scripts\n  // eslint-disable-next-line global-require, import/no-dynamic-require\n  require(INJECT_JS_PATH);\n}\n\nsetNotificationCallback((title, opt) => {\n  ipcRenderer.send('notification', title, opt);\n});\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  window.addEventListener('contextmenu', (event) => {\n    event.preventDefault();\n    let targetElement = event.srcElement;\n\n    // the clicked element is the deepest in the DOM, and may not be the <a> bearing the href\n    // for example, <a href=\"...\"><span>Google</span></a>\n    while (!targetElement.href && targetElement.parentElement) {\n      targetElement = targetElement.parentElement;\n    }\n    const targetHref = targetElement.href;\n\n    if (!targetHref) {\n      ipcRenderer.once('contextMenuClosed', () => {\n        clickSelector(event.target);\n        ipcRenderer.send('cancelNewWindowOverride');\n      });\n    }\n\n    ipcRenderer.send('contextMenuOpened', targetHref);\n  }, false);\n\n  injectScripts();\n});\n\nipcRenderer.on('params', (event, message) => {\n  const appArgs = JSON.parse(message);\n  log.info('nativefier.json', appArgs);\n});\n\nipcRenderer.on('debug', (event, message) => {\n  // eslint-disable-next-line no-console\n  log.info('debug:', message);\n});\n\nipcRenderer.on('change-zoom', (event, message) => {\n  webFrame.setZoomFactor(message);\n});\n"]}